variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - assemble
  - deploy

webpack_build:
  stage: build
  image: node:erbium
  tags:
    - docker
    - gfw
  cache:
    paths:
      - .npm_cache
      - .cache
  script:
    - PWD=`pwd`
    - npm config set cache $PWD/.npm_cache --global
    - npm ci
    - mv .cache ./node_modules || true
    - npm run build
    - mv ./node_modules/.cache ./ || true
    - npm prune --production
  artifacts:
    paths:
      - package.json
      - config/default.js
      - dist/
      - node_modules/

docker_build:
  stage: assemble
  tags:
    - shell
    - linux
    - knrt
  script:
    - docker build -t $IMAGE_NAME ./
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $IMAGE_NAME
  dependencies:
    - webpack_build

dev_deploy:
  stage: deploy
  tags:
    - knrt
    - docker
  image: docker:git
  script:
    - mkdir -p ~/.ssh
    - echo "$REVIEW_SSH_ID_RSA" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -p $REVIEW_SSH_PORT $REVIEW_SSH_USER@$REVIEW_SSH_HOST "docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no -p $REVIEW_SSH_PORT $REVIEW_SSH_USER@$REVIEW_SSH_HOST "docker pull $IMAGE_NAME"
    - ssh -o StrictHostKeyChecking=no -p $REVIEW_SSH_PORT $REVIEW_SSH_USER@$REVIEW_SSH_HOST "docker stop appraisal-server-temp || true && docker rm appraisal-server-temp || true"
    - ssh -o StrictHostKeyChecking=no -p $REVIEW_SSH_PORT $REVIEW_SSH_USER@$REVIEW_SSH_HOST "docker run -d --restart=always -e KatoUI=true -v /etc/localtime:/etc/localtime --name appraisal-server-temp -p 3210:3000 -v /data/etc/appraisal-server/check.js:/home/node/app/config/production.js $IMAGE_NAME"
  dependencies:
    - docker_build
